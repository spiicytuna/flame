# syntax=docker/dockerfile:1.7
ARG BUILDPLATFORM
ARG TARGETPLATFORM

### Client build (runs on host arch)
FROM --platform=$BUILDPLATFORM node:22-alpine AS clientbuilder
WORKDIR /app/client

# client manifest
COPY client/package.json ./package.json
# COPY client/package-lock.json ./package-lock.json  # if/when you add one

# Install client deps (! strictness)
RUN --mount=type=cache,target=/root/.npm \
    npm install --prefer-offline --no-audit --no-fund

# Validate => framer-motion
RUN node -e "require('fs').accessSync('node_modules/framer-motion/package.json')" \
 || npm install framer-motion motion-dom motion-utils --no-audit --no-fund

COPY client/ ./

# which version ??
RUN node -p "require('./node_modules/framer-motion/package.json').version"

RUN npm run build


### Server build (targets arm/v7)
FROM --platform=$TARGETPLATFORM node:22-bookworm-slim AS builder
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y -q --no-install-recommends \
  python3 python3-distutils make g++ pkg-config libsqlite3-dev ca-certificates \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /app
ENV NODE_ENV=production npm_config_jobs=4 npm_config_python=/usr/bin/python3
COPY package*.json ./
RUN --mount=type=cache,target=/root/.npm \
    --mount=type=cache,target=/root/.cache/node-gyp \
    npm install --omit=dev

# server sources
COPY . .

# client assets => /app/public
RUN mkdir -p /app/public
COPY --from=clientbuilder /app/client/dist/ /app/public/

# no client sources
RUN rm -rf /app/client

### Runtime (arm/v7)
FROM node:22-bookworm-slim
ARG DEBIAN_FRONTEND=noninteractive
RUN apt-get update && apt-get install -y -q --no-install-recommends \
  libsqlite3-0 libstdc++6 ca-certificates curl \
  && rm -rf /var/lib/apt/lists/*

ENV NODE_ENV=production
WORKDIR /app
COPY --from=builder --chown=node:node /app /app
RUN mkdir -p /app/data /app/log
USER node
EXPOSE 5005
CMD ["node", "server.js"]
